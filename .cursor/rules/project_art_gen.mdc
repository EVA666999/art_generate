---
alwaysApply: true
---

# Правила проекта Art Generation

## Архитектура проекта
Этот проект представляет собой систему генерации изображений с использованием Stable Diffusion WebUI и чат-бота с персонажами.

### Основные компоненты:
- **FastAPI приложение** (`app/main.py`) - основной API сервер
- **Stable Diffusion WebUI** - генерация изображений
- **Text Generation WebUI** - чат-бот с персонажами
- **База данных** - SQLite/PostgreSQL для хранения данных
- **Telegram бот** - мониторинг и уведомления

## Структура проекта
```
app/
├── api/endpoints/          # API эндпоинты
├── auth/                   # Аутентификация
├── chat_bot/              # Чат-бот функциональность
├── config/                # Конфигурация
├── core/                  # Основные компоненты
├── database/              # Работа с БД
├── models/                # Модели данных
├── routers/               # Роутеры FastAPI
├── schemas/               # Pydantic схемы
├── services/              # Бизнес-логика
└── utils/                 # Утилиты
```

## Правила работы с кодом
- Все API эндпоинты должны быть асинхронными
- Используй Pydantic модели для валидации входных/выходных данных
- Логируй все важные операции
- Обрабатывай ошибки gracefully
- Используй типизацию везде
- Документируй функции и классы

## Работа с Stable Diffusion
- Все запросы к SD WebUI должны иметь таймауты
- Кэшируй результаты генерации когда возможно
- Валидируй параметры генерации
- Обрабатывай ошибки API

## Работа с чат-ботом
- Персонажи хранятся в БД
- История чатов сохраняется
- Используй streaming для длинных ответов
- Валидируй входные сообщения

## База данных
- Используй Alembic для миграций
- Все модели должны быть в `app/models/`
- Используй async/await для всех DB операций
- Создавай индексы для часто запрашиваемых полей
