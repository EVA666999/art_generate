#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ app
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'app'))

async def check_characters():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ...")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏–∑ —Ñ–∞–π–ª–æ–≤
    print("\nüìÅ –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –∏–∑ —Ñ–∞–π–ª–æ–≤:")
    try:
        from app.chat_bot.create.character_service import character_service
        file_characters = character_service.list_characters()
        for char in file_characters:
            print(f"  - {char['name']}: {char['personality'][:50]}...")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ —Ñ–∞–π–ª–æ–≤: {e}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏–∑ –ë–î
    print("\nüóÑÔ∏è –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    try:
        from app.database.db import get_db
        from app.chat_bot.models.models import CharacterDB
        from sqlalchemy import select
        
        async for db in get_db():
            result = await db.execute(select(CharacterDB))
            db_characters = result.scalars().all()
            
            if db_characters:
                for char in db_characters:
                    print(f"  - {char.name}: {char.personality[:50]}...")
            else:
                print("  üì≠ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞")
            break
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –ë–î: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoint
    print("\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoint:")
    try:
        import httpx
        async with httpx.AsyncClient() as client:
            response = await client.get("http://localhost:8000/api/characters/")
            if response.status_code == 200:
                api_characters = response.json()
                print(f"  ‚úÖ API –≤–µ—Ä–Ω—É–ª {len(api_characters)} –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π:")
                for char in api_characters:
                    print(f"    - {char['name']}")
            else:
                print(f"  ‚ùå API –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å {response.status_code}")
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ API: {e}")

if __name__ == "__main__":
    asyncio.run(check_characters()) 