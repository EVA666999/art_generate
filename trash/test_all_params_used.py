#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –í–°–ï–• –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ chat_config.py –≤ API.
–¢–µ–ø–µ—Ä—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ text-generation-webui API!
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from app.chat_bot.config.chat_config import chat_config
from app.chat_bot.services.textgen_webui_service import TextGenWebUIService

def test_all_params_used():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ chat_config.py –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ API."""
    print("üß™ –¢–µ—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –í–°–ï–• –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ chat_config.py –≤ API")
    print("=" * 70)
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
    service = TextGenWebUIService()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è bat-—Ñ–∞–π–ª–∞
    bat_config = service.get_config_for_bat_file()
    
    print("üìã –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ chat_config.py —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ API:")
    print()
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    categories = {
        "üîß –ê–ø–ø–∞—Ä–∞—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": [
            "n_ctx", "n_gpu_layers", "n_threads", "n_threads_batch", 
            "n_batch", "f16_kv", "mul_mat_q", "use_mmap", "use_mlock", 
            "verbose", "offload_kqv"
        ],
        "‚ö° –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∫–æ—Ä–æ—Å—Ç–∏/–ø–∞–º—è—Ç–∏": [
            "n_keep", "n_draft", "n_chunks", "n_parallel", "vocab_only"
        ],
        "üéØ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": [
            "rope_scaling", "ftype"
        ],
        "üß† –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —É–º–Ω–æ—Å—Ç–∏": [
            "smartness", "dynamic_sampling", "temp_variance", "top_p_variance",
            "occasional_beam_prob", "enable_cot", "few_shot_examples"
        ],
        "üìè –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –¥–ª–∏–Ω—ã": [
            "max_history_length", "max_message_length", "max_response_length",
            "enforce_min_tokens", "min_new_tokens", "ban_eos_token"
        ],
        "üõ°Ô∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏": [
            "enable_content_filter", "forbidden_words"
        ],
        "üé¨ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—á–∏—Å—Ç–∫–∏ –∏ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞": [
            "sanitize_output", "streaming_delay_ms"
        ],
        "üîë –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã": [
            "embedding", "seed"
        ]
    }
    
    total_params = 0
    for category, params in categories.items():
        print(f"{category}:")
        for param in params:
            if param in bat_config:
                value = bat_config[param]
                print(f"  ‚úÖ {param}: {value}")
                total_params += 1
            else:
                print(f"  ‚ùå {param}: –ù–ï –ù–ê–ô–î–ï–ù")
        print()
    
    print(f"üìä –í—Å–µ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {total_params}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞–π–¥–µ–Ω—ã
    expected_params = sum(len(params) for params in categories.values())
    if total_params == expected_params:
        print("üéØ –í–°–ï –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ chat_config.py —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ API!")
        print("üìù –ü–∞—Ä–∞–º–µ—Ç—Ä—ã N_KEEP, N_DRAFT, N_CHUNKS –±–æ–ª—å—à–µ –Ω–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã!")
        print("üöÄ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ text-generation-webui API!")
    else:
        print(f"‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ {total_params}/{expected_params} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
    
    print()
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    key_checks = [
        ("n_ctx", chat_config.N_CTX),
        ("n_gpu_layers", chat_config.N_GPU_LAYERS),
        ("n_threads", chat_config.N_THREADS),
        ("n_keep", chat_config.N_KEEP),
        ("n_draft", chat_config.N_DRAFT),
        ("n_chunks", chat_config.N_CHUNKS),
        ("smartness", chat_config.SMARTNESS),
        ("enable_cot", chat_config.ENABLE_COT),
        ("max_history_length", chat_config.MAX_HISTORY_LENGTH),
        ("enable_content_filter", chat_config.ENABLE_CONTENT_FILTER),
        ("streaming_delay_ms", chat_config.STREAMING_DELAY_MS)
    ]
    
    all_checks_passed = True
    for param_name, expected_value in key_checks:
        if param_name in bat_config:
            actual_value = bat_config[param_name]
            if actual_value == expected_value:
                print(f"  ‚úÖ {param_name}: {actual_value} == {expected_value}")
            else:
                print(f"  ‚ùå {param_name}: {actual_value} != {expected_value}")
                all_checks_passed = False
        else:
            print(f"  ‚ùå {param_name}: –ù–ï –ù–ê–ô–î–ï–ù")
            all_checks_passed = False
    
    print()
    if all_checks_passed:
        print("üéØ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ chat_config.py –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ API!")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")

if __name__ == "__main__":
    test_all_params_used()
