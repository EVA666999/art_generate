#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –ø—Ä–æ–º–ø—Ç–∞ Anna
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏–∫—É –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞ –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from app.chat_bot.models.characters.anna import get_character_data, get_alpaca_prompt_with_user_message

def simulate_service_logic(character_data, user_message, history):
    """–°–∏–º—É–ª–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É textgen_webui_service –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞."""
    
    # –°–æ–±–∏—Ä–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    system_parts = []
    
    # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è Anna - —É—Å–∏–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    if character_data.get("name", "").lower() == "anna":
        system_parts.append("=== ANNA'S ENHANCED CONTEXT ===")
        system_parts.append("You are Anna, a shy young sister living with your brother after a painful breakup.")
        system_parts.append("Remember: You moved in recently, had an embarrassing kitchen incident, and feel vulnerable.")
        system_parts.append("")
    
    if character_data.get("system_prompt"):
        system_parts.append(character_data["system_prompt"])
    
    if character_data.get("instructions"):
        system_parts.append(character_data["instructions"])
        
    if character_data.get("response_format"):
        system_parts.append(character_data["response_format"])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
    system_parts.append("")
    system_parts.append("CRITICAL INSTRUCTIONS:")
    system_parts.append("- ALWAYS respond directly to what the user just said")
    system_parts.append("- Use context from previous messages to provide relevant answers")
    system_parts.append("- Reference specific details from the conversation when appropriate")
    system_parts.append("- Stay in character and maintain conversation flow")
    system_parts.append("- Ask follow-up questions when it makes sense")
    system_parts.append("- ALWAYS reference your background story and character context")
    system_parts.append("- Connect current conversations to your established personality and situation")
    
    system_message = "\n".join(system_parts)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞
    context_parts = []
    if history and len(history) > 0:
        # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 15 —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
        recent_history = history[-15:] if len(history) > 15 else history
        
        # –î–æ–±–∞–≤–ª—è–µ–º —á–µ—Ç–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        context_parts.append("=== CONVERSATION CONTEXT ===")
        context_parts.append("IMPORTANT: You MUST use this context to provide relevant responses.")
        context_parts.append("Reference specific details, continue ongoing topics, and maintain conversation flow.")
        context_parts.append("")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –≤ —á–µ—Ç–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        for i, msg in enumerate(recent_history, 1):
            role = msg.get("role", "user")
            content = msg.get("content", "").strip()
            if content:
                if role == "user":
                    context_parts.append(f"User: {content}")
                elif role == "assistant":
                    context_parts.append(f"{character_data.get('name', 'Anna')}: {content}")
                context_parts.append("")  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        
        context_parts.append("=== CURRENT MESSAGE TO RESPOND TO ===")
        context_parts.append("")
    else:
        context_parts.append("=== NEW CONVERSATION ===")
        context_parts.append("This is the start of our conversation.")
        context_parts.append("")
    
    # –°—Ç—Ä–æ–∏–º –ø—Ä–æ–º–ø—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ Alpaca —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
    context_text = "\n".join(context_parts)
    return f"{system_message}\n\n{context_text}{user_message}\n\n### Response:\n"

def test_anna_prompt_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞ Anna."""
    print("üß™ –¢–ï–°–¢ –õ–û–ì–ò–ö–ò –ü–û–°–¢–†–û–ï–ù–ò–Ø –ü–†–û–ú–ü–¢–ê ANNA")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    character_data = get_character_data()
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω –ø–µ—Ä—Å–æ–Ω–∞–∂: {character_data['name']}")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º build_character_prompt
    user_message = "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–≥–æ–¥–Ω—è?"
    history = [
        {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç, Anna"},
        {"role": "assistant", "content": "–ü—Ä–∏–≤–µ—Ç... –Ø –≤—Å–µ –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ —Å—Ç–µ—Å–Ω—è—é—Å—å –ø–æ—Å–ª–µ —Ç–æ–≥–æ —Å–ª—É—á–∞—è –≤ –∫—É—Ö–Ω–µ."}
    ]
    
    print(f"üí¨ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {user_message}")
    print(f"üìö –ò—Å—Ç–æ—Ä–∏—è: {len(history)} —Å–æ–æ–±—â–µ–Ω–∏–π")
    print()
    
    try:
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É —Å–µ—Ä–≤–∏—Å–∞
        prompt = simulate_service_logic(character_data, user_message, history)
        print("üìù –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ù–´–ô –ü–†–û–ú–ü–¢:")
        print("-" * 40)
        print(prompt)
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        print("üîç –ü–†–û–í–ï–†–ö–ê –ö–õ–Æ–ß–ï–í–´–• –≠–õ–ï–ú–ï–ù–¢–û–í:")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–ª—è Anna
        if "=== ANNA'S ENHANCED CONTEXT ===" in prompt:
            print("‚úÖ –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è Anna –≤–∫–ª—é—á–µ–Ω–∞")
        else:
            print("‚ùå –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è Anna –ù–ï –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        if "kitchen incident" in prompt.lower():
            print("‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç –∫—É—Ö–æ–Ω–Ω–æ–≥–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ –≤–∫–ª—é—á–µ–Ω")
        else:
            print("‚ùå –ö–æ–Ω—Ç–µ–∫—Å—Ç –∫—É—Ö–æ–Ω–Ω–æ–≥–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ –ù–ï –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        if "ALWAYS reference your background story" in prompt:
            print("‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤–∫–ª—é—á–µ–Ω—ã")
        else:
            print("‚ùå –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ù–ï –Ω–∞–π–¥–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
        if "User: –ü—Ä–∏–≤–µ—Ç, Anna" in prompt:
            print("‚úÖ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –≤–∫–ª—é—á–µ–Ω–∞")
        else:
            print("‚ùå –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –ù–ï –Ω–∞–π–¥–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        if "CRITICAL INSTRUCTIONS:" in prompt:
            print("‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤–∫–ª—é—á–µ–Ω—ã")
        else:
            print("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ù–ï –Ω–∞–π–¥–µ–Ω—ã")
        
        print()
        print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –±–∞–ª–ª—ã
        score = 0
        total_checks = 5
        
        if "=== ANNA'S ENHANCED CONTEXT ===" in prompt:
            score += 1
        if "kitchen incident" in prompt.lower():
            score += 1
        if "ALWAYS reference your background story" in prompt:
            score += 1
        if "User: –ü—Ä–∏–≤–µ—Ç, Anna" in prompt:
            score += 1
        if "CRITICAL INSTRUCTIONS:" in prompt:
            score += 1
        
        if score == total_checks:
            print("‚úÖ –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ä–∞–±–æ—Ç–∞—é—Ç")
        elif score >= total_checks * 0.8:
            print("‚úÖ –•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        elif score >= total_checks * 0.6:
            print("‚ö†Ô∏è –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        else:
            print("‚ùå –ü–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ú–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        print(f"üìä –û—Ü–µ–Ω–∫–∞: {score}/{total_checks} ({score/total_checks*100:.1f}%)")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
        print()
        print("üîç –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–†–û–í–ï–†–ö–ò:")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –ø—Ä–æ–º–ø—Ç–∞
        prompt_length = len(prompt)
        print(f"üìè –î–ª–∏–Ω–∞ –ø—Ä–æ–º–ø—Ç–∞: {prompt_length} —Å–∏–º–≤–æ–ª–æ–≤")
        
        if prompt_length > 1000:
            print("‚úÖ –ü—Ä–æ–º–ø—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ—Ç–∞–ª—å–Ω—ã–π –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞")
        elif prompt_length > 500:
            print("‚úÖ –ü—Ä–æ–º–ø—Ç –∏–º–µ–µ—Ç —Ö–æ—Ä–æ—à–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏")
        else:
            print("‚ö†Ô∏è –ü—Ä–æ–º–ø—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ—Ç–∞–ª—å–Ω—ã–º")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        if "CONTEXT:" in prompt and "BACKGROUND STORY:" in prompt:
            print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —á–µ—Ç–∫–∞—è –∏ –ø–æ–Ω—è—Ç–Ω–∞—è")
        else:
            print("‚ö†Ô∏è –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–ª—É—á—à–µ–Ω–∞")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_anna_prompt_logic()
