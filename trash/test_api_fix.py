#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ API —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º Anna.
"""

import asyncio
import sys
import os
import aiohttp
import json

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from app.chat_bot.models.characters.anna import get_character_data

async def test_api_with_anna():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º Anna."""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π API —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º Anna...")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    character_data = get_character_data()
    print(f"‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–∂ –∑–∞–≥—Ä—É–∂–µ–Ω: {character_data['name']}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint
    api_url = "http://localhost:8000/api/v1/chat/stream/5"  # character_id=5
    
    test_message = "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?"
    
    payload = {
        "message": test_message,
        "history": []
    }
    
    try:
        async with aiohttp.ClientSession() as session:
            print(f"\nüöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API: {api_url}")
            print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {test_message}")
            
            async with session.post(api_url, json=payload) as response:
                print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status}")
                
                if response.status == 200:
                    print("‚úÖ API –æ—Ç–≤–µ—Ç–∏–ª —É—Å–ø–µ—à–Ω–æ!")
                    
                    # –ß–∏—Ç–∞–µ–º streaming –æ—Ç–≤–µ—Ç
                    response_text = ""
                    async for line in response.content:
                        line_str = line.decode('utf-8').strip()
                        if line_str.startswith('data: '):
                            try:
                                data = json.loads(line_str[6:])
                                if 'chunk' in data:
                                    chunk = data['chunk']
                                    response_text += chunk
                                    print(f"üìù –ß–∞–Ω–∫: {chunk}")
                                    
                                    if data.get('done', False):
                                        break
                            except json.JSONDecodeError:
                                continue
                    
                    print(f"\nüí¨ –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç ({len(response_text)} —Å–∏–º–≤–æ–ª–æ–≤):")
                    print("-" * 50)
                    print(response_text)
                    print("-" * 50)
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ –¥–ª—è Anna —ç–ª–µ–º–µ–Ω—Ç—ã
                    if "I" in response_text or "my" in response_text.lower():
                        print("‚úÖ –û—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ –¥–ª—è Anna —ç–ª–µ–º–µ–Ω—Ç—ã (–ø–µ—Ä–≤–æ–µ –ª–∏—Ü–æ)")
                    else:
                        print("‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã—Ö –¥–ª—è Anna —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                        
                else:
                    error_text = await response.text()
                    print(f"‚ùå API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {response.status}")
                    print(f"üìù –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: {error_text}")
                    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ API —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º Anna")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    asyncio.run(test_api_with_anna())
    
    print("\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
