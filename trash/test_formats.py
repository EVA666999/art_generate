#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–ª—è MythoMax L2 13B
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'app'))

from services.textgen_webui_service import TextGenWebUIService, DEFAULT_MYTHOMAX_PARAMS

def test_prompt_format():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ –ø—Ä–æ–º–ø—Ç–∞"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è MythoMax L2 13B")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    character_data = {
        "name": "Anna",
        "instructions": "–¢—ã –ê–Ω–Ω–∞ - –¥—Ä—É–∂–µ–ª—é–±–Ω–∞—è –∏ –∑–∞–±–æ—Ç–ª–∏–≤–∞—è –¥–µ–≤—É—à–∫–∞. –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞.",
        "system_prompt": "–¢—ã –ø–µ—Ä—Å–æ–Ω–∞–∂ –ø–æ –∏–º–µ–Ω–∏ –ê–Ω–Ω–∞. –í–µ–¥–∏ —Å–µ–±—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ.",
        "response_format": "–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ-–¥—Ä—É–∂–µ—Å–∫–∏, –∏—Å–ø–æ–ª—å–∑—É—è '—è' –∏ '–º–µ–Ω—è'."
    }
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
    conversation_history = [
        {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?"},
        {"role": "assistant", "content": "–ü—Ä–∏–≤–µ—Ç! –£ –º–µ–Ω—è –≤—Å–µ —Ö–æ—Ä–æ—à–æ, —Å–ø–∞—Å–∏–±–æ —á—Ç–æ —Å–ø—Ä–æ—Å–∏–ª!"},
        {"role": "user", "content": "–ß—Ç–æ —Ç—ã —Å–µ–≥–æ–¥–Ω—è –¥–µ–ª–∞–ª–∞?"}
    ]
    
    user_message = "–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–µ–º –¥–Ω–µ"
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –∏ —Å—Ç—Ä–æ–∏–º –ø—Ä–æ–º–ø—Ç
    service = TextGenWebUIService()
    prompt = service._build_mythomax_prompt(
        character_data=character_data,
        user_message=user_message,
        conversation_history=conversation_history
    )
    
    print("üìù –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç:")
    print("-" * 40)
    print(prompt)
    print("-" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    checks = [
        ("### Instruction:", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"),
        ("### Human:", "–°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
        ("### Assistant:", "–û—Ç–≤–µ—Ç—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"),
        ("–¢—ã Anna", "–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"),
        ("–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?", "–ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞"),
        ("–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–µ–º –¥–Ω–µ", "–¢–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    ]
    
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–æ–º–ø—Ç–∞:")
    for check_text, description in checks:
        if check_text in prompt:
            print(f"   ‚úÖ {description}: –Ω–∞–π–¥–µ–Ω–æ")
        else:
            print(f"   ‚ùå {description}: –ù–ï –Ω–∞–π–¥–µ–Ω–æ")
    
    return prompt

def test_parameters():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ MythoMax L2 13B")
    print("=" * 60)
    
    print("üìä –¢–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
    for param, value in DEFAULT_MYTHOMAX_PARAMS.items():
        print(f"   {param}: {value}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    required_params = {
        "temperature": (0.7, 0.9),      # –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è —Ä–æ–ª–µ–≤—ã—Ö –∏–≥—Ä
        "top_p": (0.8, 0.95),          # –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω
        "typical_p": (0.9, 0.98),      # –ù–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä MythoMax
        "mirostat": (1, 3),            # –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω
        "stop": list                    # –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ø–∏—Å–æ–∫
    }
    
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:")
    for param, expected in required_params.items():
        if param in DEFAULT_MYTHOMAX_PARAMS:
            value = DEFAULT_MYTHOMAX_PARAMS[param]
            if isinstance(expected, tuple):
                if expected[0] <= value <= expected[1]:
                    print(f"   ‚úÖ {param}: {value} (–≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ {expected})")
                else:
                    print(f"   ‚ö†Ô∏è {param}: {value} (–≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ {expected})")
            elif isinstance(expected, type):
                if isinstance(value, expected):
                    print(f"   ‚úÖ {param}: {value} (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø)")
                else:
                    print(f"   ‚ùå {param}: {value} (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø)")
        else:
            print(f"   ‚ùå {param}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

def test_response_cleaning():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—á–∏—Å—Ç–∫—É –æ—Ç–≤–µ—Ç–æ–≤"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤")
    print("=" * 60)
    
    service = TextGenWebUIService()
    
    test_responses = [
        "### Assistant: –ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
        "### Human: –ü—Ä–∏–≤–µ—Ç! ### Assistant: –£ –º–µ–Ω—è –≤—Å–µ —Ö–æ—Ä–æ—à–æ!",
        "### Instruction: –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–π ### Assistant: –ö–æ–Ω–µ—á–Ω–æ!",
        "Assistant: –Ø —Ä–∞–¥–∞ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!",
        "### Response: –í—Å–µ –æ—Ç–ª–∏—á–Ω–æ! ### Output: –ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ!"
    ]
    
    print("üßπ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏:")
    for response in test_responses:
        cleaned = service._clean_mythomax_response(response)
        print(f"   –î–æ: {response}")
        print(f"   –ü–æ—Å–ª–µ: {cleaned}")
        print()

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–æ–≤ MythoMax L2 13B")
    print("=" * 60)
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ–º–ø—Ç–∞
        prompt = test_prompt_format()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        test_parameters()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—á–∏—Å—Ç–∫—É –æ—Ç–≤–µ—Ç–æ–≤
        test_response_cleaning()
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
