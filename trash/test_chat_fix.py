#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ chat endpoint.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –æ—à–∏–±–∫–∞ 'tuple' object has no attribute 'get' –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞.
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from app.chat_bot.services.textgen_webui_service import TextGenWebUIService

async def test_prompt_building_with_tuple_history():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ —Å –∏—Å—Ç–æ—Ä–∏–µ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–æ—Ä—Ç–µ–∂–µ–π (–∫–∞–∫ –≤ chat endpoint)."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ —Å –∏—Å—Ç–æ—Ä–∏–µ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–æ—Ä—Ç–µ–∂–µ–π...")
    
    service = TextGenWebUIService()
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç –∏—Å—Ç–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∏–∑ chat endpoint
    # –í chat endpoint: history=[(msg.role.value, msg.content) for msg in messages[:-1]]
    history_tuple = [
        ("user", "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?"),
        ("assistant", "–ü—Ä–∏–≤–µ—Ç! –£ –º–µ–Ω—è –≤—Å–µ —Ö–æ—Ä–æ—à–æ, —Å–ø–∞—Å–∏–±–æ! –ö–∞–∫ —É —Ç–µ–±—è –¥–µ–ª–∞?"),
        ("user", "–¢–æ–∂–µ —Ö–æ—Ä–æ—à–æ! –†–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ")
    ]
    
    system_prompt = "–¢—ã –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∏–º–µ–Ω–∏ –ê–Ω–Ω–∞. –¢—ã –≤—Å–µ–≥–¥–∞ –≤–µ–∂–ª–∏–≤–∞ –∏ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å."
    user_message = "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç –ø—Ä–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤"
    
    try:
        prompt = service.build_mythomax_prompt(system_prompt, user_message, history=history_tuple)
        print("‚úÖ –ü—Ä–æ–º–ø—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω!")
        print(f"üìù –†–µ–∑—É–ª—å—Ç–∞—Ç:\n{prompt}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–º–ø—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —á–∞—Å—Ç–∏
        assert "### Instruction:" in prompt, "–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å Instruction —Å–µ–∫—Ü–∏–∏"
        assert "### Response:" in prompt, "–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å Response —Å–µ–∫—Ü–∏–∏"
        assert "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?" in prompt, "–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        assert "–ü—Ä–∏–≤–µ—Ç! –£ –º–µ–Ω—è –≤—Å–µ —Ö–æ—Ä–æ—à–æ" in prompt, "–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"
        assert "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç –ø—Ä–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤" in prompt, "–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        
        print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –ø—Ä–æ–º–ø—Ç–∞: {e}")
        import traceback
        traceback.print_exc()

async def test_prompt_building_with_dict_history():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ —Å –∏—Å—Ç–æ—Ä–∏–µ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ª–æ–≤–∞—Ä–µ–π (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç)."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ —Å –∏—Å—Ç–æ—Ä–∏–µ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ª–æ–≤–∞—Ä–µ–π...")
    
    service = TextGenWebUIService()
    
    # –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –∏—Å—Ç–æ—Ä–∏–∏ (–ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è)
    history_dict = [
        {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?"},
        {"role": "assistant", "content": "–ü—Ä–∏–≤–µ—Ç! –£ –º–µ–Ω—è –≤—Å–µ —Ö–æ—Ä–æ—à–æ, —Å–ø–∞—Å–∏–±–æ! –ö–∞–∫ —É —Ç–µ–±—è –¥–µ–ª–∞?"},
        {"role": "user", "content": "–¢–æ–∂–µ —Ö–æ—Ä–æ—à–æ! –†–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ"}
    ]
    
    system_prompt = "–¢—ã –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∏–º–µ–Ω–∏ –ê–Ω–Ω–∞. –¢—ã –≤—Å–µ–≥–¥–∞ –≤–µ–∂–ª–∏–≤–∞ –∏ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å."
    user_message = "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç –ø—Ä–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤"
    
    try:
        prompt = service.build_mythomax_prompt(system_prompt, user_message, history=history_dict)
        print("‚úÖ –ü—Ä–æ–º–ø—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω!")
        print(f"üìù –†–µ–∑—É–ª—å—Ç–∞—Ç:\n{prompt}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–º–ø—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —á–∞—Å—Ç–∏
        assert "### Instruction:" in prompt, "–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å Instruction —Å–µ–∫—Ü–∏–∏"
        assert "### Response:" in prompt, "–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å Response —Å–µ–∫—Ü–∏–∏"
        assert "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?" in prompt, "–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        assert "–ü—Ä–∏–≤–µ—Ç! –£ –º–µ–Ω—è –≤—Å–µ —Ö–æ—Ä–æ—à–æ" in prompt, "–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"
        assert "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç –ø—Ä–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤" in prompt, "–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        
        print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –ø—Ä–æ–º–ø—Ç–∞: {e}")
        import traceback
        traceback.print_exc()

async def test_mixed_history_formats():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ —Å–æ —Å–º–µ—à–∞–Ω–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏ –∏—Å—Ç–æ—Ä–∏–∏."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ —Å–æ —Å–º–µ—à–∞–Ω–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏ –∏—Å—Ç–æ—Ä–∏–∏...")
    
    service = TextGenWebUIService()
    
    # –°–º–µ—à–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏—Å—Ç–æ—Ä–∏–∏ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏)
    history_mixed = [
        {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç!"},
        ("assistant", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!"),
        ["user", "–ö–∞–∫ –¥–µ–ª–∞?"],
        {"role": "assistant", "content": "–°–ø–∞—Å–∏–±–æ, —Ö–æ—Ä–æ—à–æ!"}
    ]
    
    system_prompt = "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫"
    user_message = "–†–∞—Å—Å–∫–∞–∂–∏ –∏—Å—Ç–æ—Ä–∏—é"
    
    try:
        prompt = service.build_mythomax_prompt(system_prompt, user_message, history=history_mixed)
        print("‚úÖ –ü—Ä–æ–º–ø—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω —Å–æ —Å–º–µ—à–∞–Ω–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π!")
        print(f"üìù –†–µ–∑—É–ª—å—Ç–∞—Ç:\n{prompt}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã
        assert "–ü—Ä–∏–≤–µ—Ç!" in prompt, "–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        assert "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!" in prompt, "–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        assert "–ö–∞–∫ –¥–µ–ª–∞?" in prompt, "–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç—Ä–µ—Ç—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        assert "–°–ø–∞—Å–∏–±–æ, —Ö–æ—Ä–æ—à–æ!" in prompt, "–ü—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —á–µ—Ç–≤–µ—Ä—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        
        print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –ø—Ä–æ–º–ø—Ç–∞: {e}")
        import traceback
        traceback.print_exc()

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ chat endpoint")
    print("=" * 60)
    
    try:
        await test_prompt_building_with_tuple_history()
        await test_prompt_building_with_dict_history()
        await test_mixed_history_formats()
        
        print("\n" + "=" * 60)
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã chat endpoint –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –û—à–∏–±–∫–∞ 'tuple' object has no attribute 'get' –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(main())
