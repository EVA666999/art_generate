#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ main.py –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from app.chat_bot.services.textgen_webui_service import TextGenWebUIService
from app.chat_bot.schemas.chat import ChatMessage, MessageRole, CharacterConfig, SimpleChatRequest
from app.chat_bot.config.chat_config import chat_config


async def test_main_fixed():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏–∑ main.py"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ main.py...")
    print(f"üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"   ‚Ä¢ DEFAULT_MAX_TOKENS: {chat_config.DEFAULT_MAX_TOKENS}")
    print(f"   ‚Ä¢ DEFAULT_TEMPERATURE: {chat_config.DEFAULT_TEMPERATURE}")
    print(f"   ‚Ä¢ DEFAULT_TOP_P: {chat_config.DEFAULT_TOP_P}")
    print(f"   ‚Ä¢ DEFAULT_TOP_K: {chat_config.DEFAULT_TOP_K}")
    print(f"   ‚Ä¢ DEFAULT_REPEAT_PENALTY: {chat_config.DEFAULT_REPEAT_PENALTY}")
    print(f"   ‚Ä¢ DEFAULT_PRESENCE_PENALTY: {chat_config.DEFAULT_PRESENCE_PENALTY}")
    print(f"   ‚Ä¢ ENFORCE_MIN_TOKENS: {chat_config.ENFORCE_MIN_TOKENS}")
    print(f"   ‚Ä¢ MIN_NEW_TOKENS: {chat_config.MIN_NEW_TOKENS}")
    print(f"   ‚Ä¢ BAN_EOS_TOKEN: {chat_config.BAN_EOS_TOKEN}")
    print()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂
    test_character = CharacterConfig(
        name="TestAnna",
        instructions="You are Anna, a shy but curious young woman. Write naturally and in detail.",
        system_prompt="You are having a conversation with your brother.",
        response_format="Respond naturally and in detail."
    )
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –° –ü–ê–†–ê–ú–ï–¢–†–ê–ú–ò –ì–ï–ù–ï–†–ê–¶–ò–ò
    test_request = SimpleChatRequest(
        message="Tell me about your day and what you've been thinking about.",
        max_tokens=1024,
        temperature=0.8,
        top_p=0.95,
        top_k=50,
        repeat_penalty=1.1
    )
    
    print("üìù –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:")
    print(f"   ‚Ä¢ max_tokens: {test_request.max_tokens}")
    print(f"   ‚Ä¢ temperature: {test_request.temperature}")
    print(f"   ‚Ä¢ top_p: {test_request.top_p}")
    print(f"   ‚Ä¢ top_k: {test_request.top_k}")
    print(f"   ‚Ä¢ repeat_penalty: {test_request.repeat_penalty}")
    print()
    
    try:
        async with TextGenWebUIService() as service:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
            if not await service.check_connection():
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ text-generation-webui")
                return
            
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ text-generation-webui —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            print()
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
            print("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç...")
            response, meta = await service.generate_response(
                messages=[ChatMessage(role=MessageRole.USER, content=test_request.message)],
                character_config=test_character,
                max_tokens=test_request.max_tokens,
                temperature=test_request.temperature,
                top_p=test_request.top_p,
                top_k=test_request.top_k,
                repeat_penalty=test_request.repeat_penalty
            )
            
            print(f"üìù –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:")
            print(f"   ‚Ä¢ –î–ª–∏–Ω–∞: {len(response)} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"   ‚Ä¢ –¢–æ–∫–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {meta.get('tokens_used', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print(f"   ‚Ä¢ –ú–æ–¥–µ–ª—å: {meta.get('model_data', {}).get('model', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print()
            print("üìÑ –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞:")
            print("-" * 50)
            print(response)
            print("-" * 50)
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ
            if len(response) < 100:
                print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û—Ç–≤–µ—Ç –≤—Å–µ –µ—â–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π!")
                print("üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
                print("   ‚Ä¢ –ú–æ–¥–µ–ª—å –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç min_new_tokens")
                print("   ‚Ä¢ –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∞–º–∏–º MythoMax")
                print("   ‚Ä¢ –ù—É–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å")
            elif len(response) < 200:
                print("‚ö†Ô∏è  –û—Ç–≤–µ—Ç –∫–æ—Ä–æ—Ç–∫–∏–π, –Ω–æ –ª—É—á—à–µ")
            else:
                print("‚úÖ –û—Ç–≤–µ—Ç –∏–º–µ–µ—Ç —Ö–æ—Ä–æ—à—É—é –¥–ª–∏–Ω—É!")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ main.py...")
    print("=" * 50)
    
    asyncio.run(test_main_fixed())
    
    print("\nüèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
