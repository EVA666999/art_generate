#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª–∏–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç –º–æ–¥–µ–ª–∏.
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from app.chat_bot.services.textgen_webui_service import TextGenWebUIService
from app.chat_bot.schemas.chat import ChatMessage, MessageRole, CharacterConfig
from app.chat_bot.config.chat_config import chat_config


async def test_long_responses():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –¥–ª–∏–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª–∏–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤...")
    print(f"üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"   ‚Ä¢ DEFAULT_MAX_TOKENS: {chat_config.DEFAULT_MAX_TOKENS}")
    print(f"   ‚Ä¢ DEFAULT_TEMPERATURE: {chat_config.DEFAULT_TEMPERATURE}")
    print(f"   ‚Ä¢ ENFORCE_MIN_TOKENS: {chat_config.ENFORCE_MIN_TOKENS}")
    print(f"   ‚Ä¢ MIN_NEW_TOKENS: {chat_config.MIN_NEW_TOKENS}")
    print(f"   ‚Ä¢ BAN_EOS_TOKEN: {chat_config.BAN_EOS_TOKEN}")
    print(f"   ‚Ä¢ DEFAULT_STOP_TOKENS: {chat_config.DEFAULT_STOP_TOKENS}")
    print()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂
    test_character = CharacterConfig(
        name="TestAnna",
        instructions="You are Anna, a shy but curious young woman. Write detailed, engaging responses.",
        system_prompt="You are having a conversation with your brother.",
        response_format="Respond naturally and in detail."
    )
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    test_messages = [
        ChatMessage(
            role=MessageRole.USER,
            content="Tell me about your day and what you've been thinking about."
        )
    ]
    
    try:
        async with TextGenWebUIService() as service:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
            if not await service.check_connection():
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ text-generation-webui")
                return
            
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ text-generation-webui —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            print()
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
            print("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç...")
            response, meta = await service.generate_response(
                messages=test_messages,
                character_config=test_character,
                temperature=0.8,
                max_tokens=1024
            )
            
            print(f"üìù –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:")
            print(f"   ‚Ä¢ –î–ª–∏–Ω–∞: {len(response)} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"   ‚Ä¢ –¢–æ–∫–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {meta.get('tokens_used', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print(f"   ‚Ä¢ –ú–æ–¥–µ–ª—å: {meta.get('model_data', {}).get('model', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print()
            print("üìÑ –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞:")
            print("-" * 50)
            print(response)
            print("-" * 50)
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ
            if len(response) < 100:
                print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û—Ç–≤–µ—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π!")
            elif len(response) < 200:
                print("‚ö†Ô∏è  –û—Ç–≤–µ—Ç –∫–æ—Ä–æ—Ç–∫–∏–π, –Ω–æ –ø—Ä–∏–µ–º–ª–µ–º—ã–π")
            else:
                print("‚úÖ –û—Ç–≤–µ—Ç –∏–º–µ–µ—Ç —Ö–æ—Ä–æ—à—É—é –¥–ª–∏–Ω—É")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –¥–ª–∏–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤...")
    print("=" * 50)
    
    asyncio.run(test_long_responses())
    
    print("\nüèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
