#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ API text-generation-webui
"""

import asyncio
import aiohttp
import json
from typing import Dict, Any

async def check_api_status() -> None:
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å API text-generation-webui"""
    
    base_url = "http://127.0.0.1:7860"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ endpoints
    endpoints = [
        "/api/v1/model",
        "/api/v1/generate",
        "/api/v1/chat/completions",
        "/"
    ]
    
    async with aiohttp.ClientSession() as session:
        for endpoint in endpoints:
            try:
                url = f"{base_url}{endpoint}"
                print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º: {url}")
                
                async with session.get(url, timeout=10) as response:
                    print(f"   –°—Ç–∞—Ç—É—Å: {response.status}")
                    print(f"   Content-Type: {response.headers.get('content-type', 'N/A')}")
                    
                    if response.status == 200:
                        try:
                            content = await response.text()
                            if len(content) > 200:
                                print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {content[:200]}...")
                            else:
                                print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {content}")
                        except:
                            print("   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å")
                    else:
                        print(f"   –û—à–∏–±–∫–∞: {response.status}")
                        
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
            
            print()

if __name__ == "__main__":
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API text-generation-webui")
    print("=" * 50)
    asyncio.run(check_api_status())
