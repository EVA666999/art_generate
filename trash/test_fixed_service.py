#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ text-generation-webui.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ 'tuple' object has no attribute 'get'.
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from app.chat_bot.services.textgen_webui_service import TextGenWebUIService

async def test_build_prompt():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥ build_mythomax_prompt —Å —Ä–∞–∑–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏ –∏—Å—Ç–æ—Ä–∏–∏."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ build_mythomax_prompt...")
    
    service = TextGenWebUIService()
    
    # –¢–µ—Å—Ç 1: –ò—Å—Ç–æ—Ä–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ª–æ–≤–∞—Ä–µ–π (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)
    print("\nüìù –¢–µ—Å—Ç 1: –ò—Å—Ç–æ—Ä–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ª–æ–≤–∞—Ä–µ–π")
    history_dict = [
        {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç!"},
        {"role": "assistant", "content": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!"},
        {"role": "user", "content": "–ö–∞–∫ –¥–µ–ª–∞?"}
    ]
    
    prompt1 = service.build_mythomax_prompt(
        "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫", 
        "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç", 
        history=history_dict
    )
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç:\n{prompt1}")
    
    # –¢–µ—Å—Ç 2: –ò—Å—Ç–æ—Ä–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–æ—Ä—Ç–µ–∂–µ–π (—Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç)
    print("\nüìù –¢–µ—Å—Ç 2: –ò—Å—Ç–æ—Ä–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–æ—Ä—Ç–µ–∂–µ–π")
    history_tuple = [
        ("user", "–ü—Ä–∏–≤–µ—Ç!"),
        ("assistant", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!"),
        ("user", "–ö–∞–∫ –¥–µ–ª–∞?")
    ]
    
    prompt2 = service.build_mythomax_prompt(
        "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫", 
        "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç", 
        history=history_tuple
    )
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç:\n{prompt2}")
    
    # –¢–µ—Å—Ç 3: –ò—Å—Ç–æ—Ä–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ø–∏—Å–∫–æ–≤
    print("\nüìù –¢–µ—Å—Ç 3: –ò—Å—Ç–æ—Ä–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ø–∏—Å–∫–æ–≤")
    history_list = [
        ["user", "–ü—Ä–∏–≤–µ—Ç!"],
        ["assistant", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!"],
        ["user", "–ö–∞–∫ –¥–µ–ª–∞?"]
    ]
    
    prompt3 = service.build_mythomax_prompt(
        "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫", 
        "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç", 
        history=history_list
    )
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç:\n{prompt3}")
    
    # –¢–µ—Å—Ç 4: –ü—É—Å—Ç–∞—è –∏—Å—Ç–æ—Ä–∏—è
    print("\nüìù –¢–µ—Å—Ç 4: –ü—É—Å—Ç–∞—è –∏—Å—Ç–æ—Ä–∏—è")
    prompt4 = service.build_mythomax_prompt(
        "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫", 
        "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç", 
        history=[]
    )
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç:\n{prompt4}")
    
    # –¢–µ—Å—Ç 5: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è
    print("\nüìù –¢–µ—Å—Ç 5: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è")
    history_bad = [
        "–ø—Ä–æ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∞",
        {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç!"},
        None,
        {"role": "assistant", "content": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!"}
    ]
    
    prompt5 = service.build_mythomax_prompt(
        "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫", 
        "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç", 
        history=history_bad
    )
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç:\n{prompt5}")
    
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã build_mythomax_prompt –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")

async def test_service_initialization():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å–µ—Ä–≤–∏—Å–∞."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å–µ—Ä–≤–∏—Å–∞...")
    
    try:
        service = TextGenWebUIService()
        print(f"‚úÖ –°–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"   Base URL: {service.base_url}")
        print(f"   Model: {service.model_name}")
        print(f"   Timeout: {service.timeout}")
        print(f"   Is connected: {service.is_connected}")
        print(f"   Is available: {service.is_available}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Ä–≤–∏—Å–∞: {e}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ text-generation-webui")
    print("=" * 60)
    
    try:
        await test_service_initialization()
        await test_build_prompt()
        
        print("\n" + "=" * 60)
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(main())
