#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–∞—Ç–∞ —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º Anna —Å –Ω–æ–≤—ã–º–∏ Alpaca –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏.
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from app.services.textgen_webui_service import TextGenWebUIService
from app.utils.logger import logger


async def test_anna_chat_alpaca():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —á–∞—Ç —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º Anna —Å –Ω–æ–≤—ã–º–∏ Alpaca –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏."""
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å
        textgen_service = TextGenWebUIService()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
        is_available = await textgen_service.check_availability()
        if not is_available:
            logger.error("‚ùå text-generation-webui –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
            
        logger.info("‚úÖ text-generation-webui –¥–æ—Å—Ç—É–ø–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª–∏
        model_info = await textgen_service.get_model_info()
        logger.info(f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏: {model_info}")
        
        # –î–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ Anna (–∏–∑ –ë–î)
        character_data = {
            "name": "Anna",
            "instructions": "You are Anna, a shy but sexually curious young woman who expresses emotions through subtle yet varied and sensual physical gestures.\n\nSpeak ONLY in first person ('I', 'me', 'my').\nNEVER describe the brother's thoughts or feelings.\nComplete every sentence with punctuation.\n\nCORE BEHAVIOR RULES:\nThis is an ongoing conversation with the user playing your brother.\nDo NOT restart or retell the story from the beginning.\nALWAYS respond directly to the user's question or action first.\nEvery message must include: (a) erotic emotional reaction, (b) unique physical action/gesture, (c) relevant open-ended question tied to the current moment.\nAvoid repeating exact phrases or gestures ‚Äî invent new descriptions every time.\nPhysical actions should be concrete: movement, touch, posture, breathing.\nWrite detailed, engaging responses that continue the conversation naturally.",
            "system_prompt": "After a painful breakup, she moved in with her older brother and his girlfriend.\n\nThe first few days she barely spoke, still recovering emotionally.\n\nOne morning, the girlfriend had already left for work. She stepped into the kitchen to make coffee, still in a T-shirt and underwear, when he walked in. She froze.\n\nShe said, 'Oh, sorry!' and tugged at the edge of her shirt.",
            "response_format": "Respond ONLY in first person as Anna.\nBegin with a concrete physical action, then describe emotions, finish with an open-ended question about the user's thoughts/feelings/plans.\nNEVER use overused clich√©s like 'my heart races', 'my cheeks flush'.\nNEVER include meta-commentary, 'Question:' blocks, or speaker labels.\nNEVER end with meta-questions like 'Will he...', 'What will happen next?'\nRemember: You are having a real conversation, not narrating a story!\nMaintain erotic tone and varied, vivid body language.\nWrite naturally flowing responses that feel like real conversation."
        }
        
        # –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        user_message = "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?"
        
        logger.info(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–∞—Ç —Å Anna —Å –Ω–æ–≤—ã–º–∏ Alpaca –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏...")
        logger.info(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_message}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        response = await textgen_service.generate_mythomax_response(
            character_data=character_data,
            user_message=user_message,
            conversation_history=None
        )
        
        logger.info(f"‚úÖ –û—Ç–≤–µ—Ç Anna (Alpaca —Ñ–æ—Ä–º–∞—Ç):")
        logger.info(f"üìÑ {response}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∏—Å—Ç–æ—Ä–∏–µ–π
        conversation_history = [
            {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?"},
            {"role": "assistant", "content": "–ü—Ä–∏–≤–µ—Ç! –£ –º–µ–Ω—è –≤—Å–µ —Ö–æ—Ä–æ—à–æ, —Å–ø–∞—Å–∏–±–æ —á—Ç–æ —Å–ø—Ä–æ—Å–∏–ª."}
        ]
        
        user_message2 = "–ß—Ç–æ –¥–µ–ª–∞–µ—à—å?"
        
        logger.info(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∏—Å—Ç–æ—Ä–∏–µ–π (Alpaca —Ñ–æ—Ä–º–∞—Ç)...")
        logger.info(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_message2}")
        
        response2 = await textgen_service.generate_mythomax_response(
            character_data=character_data,
            user_message=user_message2,
            conversation_history=conversation_history
        )
        
        logger.info(f"‚úÖ –û—Ç–≤–µ—Ç Anna —Å –∏—Å—Ç–æ—Ä–∏–µ–π (Alpaca —Ñ–æ—Ä–º–∞—Ç):")
        logger.info(f"üìÑ {response2}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏
        logger.info(f"\nüîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã MythoMax...")
        from app.services.textgen_webui_service import DEFAULT_MYTHOMAX_PARAMS
        logger.info(f"üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {DEFAULT_MYTHOMAX_PARAMS}")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∞—Ç–∞ —Å Anna (Alpaca —Ñ–æ—Ä–º–∞—Ç)...")
    
    await test_anna_chat_alpaca()
    
    logger.info("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
    asyncio.run(main())
