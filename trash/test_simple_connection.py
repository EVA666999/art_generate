#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏.
"""

import asyncio
import aiohttp
from aiohttp import ClientTimeout


async def test_simple_connection():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
    session = aiohttp.ClientSession()
    
    try:
        print("üì° –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ http://127.0.0.1:7860/")
        
        # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π GET –∑–∞–ø—Ä–æ—Å
        async with session.get("http://127.0.0.1:7860/", timeout=ClientTimeout(total=10)) as resp:
            print(f"‚úÖ GET –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω: —Å—Ç–∞—Ç—É—Å {resp.status}")
            text = await resp.text()
            print(f"üìù –û—Ç–≤–µ—Ç: {text[:100]}...")
        
        # –¢–µ—Å—Ç 2: POST –∑–∞–ø—Ä–æ—Å –∫ API
        print("\nüì° –¢–µ—Å—Ç–∏—Ä—É–µ–º POST –∑–∞–ø—Ä–æ—Å –∫ /api/v1/generate")
        test_payload = {
            "prompt": "Hello",
            "max_new_tokens": 10,
            "temperature": 0.7
        }
        
        async with session.post("http://127.0.0.1:7860/api/v1/generate", 
                               json=test_payload, 
                               timeout=ClientTimeout(total=30)) as resp:
            print(f"‚úÖ POST –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω: —Å—Ç–∞—Ç—É—Å {resp.status}")
            if resp.status == 200:
                data = await resp.json()
                print(f"üìä –û—Ç–≤–µ—Ç: {data}")
            else:
                text = await resp.text()
                print(f"üìù –û—à–∏–±–∫–∞: {text}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        await session.close()
        print("üîí –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞")


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞...")
    print("=" * 50)
    
    try:
        asyncio.run(test_simple_connection())
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    print("=" * 50)
    print("üèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
