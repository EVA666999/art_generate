#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from app.chat_bot.services.textgen_webui_service import TextGenWebUIService
from app.chat_bot.models.characters.anna import anna

def test_simplified_service():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    service = TextGenWebUIService()
    
    # –¢–µ—Å—Ç build_character_prompt
    print("\n1. –¢–µ—Å—Ç build_character_prompt:")
    prompt = service.build_character_prompt(
        character_data=anna,
        user_message="–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
        chat_history=[]
    )
    print("‚úÖ –ü—Ä–æ–º–ø—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    print(f"–î–ª–∏–Ω–∞ –ø—Ä–æ–º–ø—Ç–∞: {len(prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
    critical_count = prompt.count("CRITICAL")
    first_person_count = prompt.count("FIRST PERSON")
    
    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ 'CRITICAL': {critical_count}")
    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ 'FIRST PERSON': {first_person_count}")
    
    if critical_count <= 2 and first_person_count <= 3:
        print("‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç—Ä–∞–Ω–µ–Ω–æ - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è")
    else:
        print("‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ –µ—Å—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ")
    
    # –¢–µ—Å—Ç build_mythomax_prompt
    print("\n2. –¢–µ—Å—Ç build_mythomax_prompt:")
    mythomax_prompt = service.build_mythomax_prompt(
        system_message="–¢—ã Anna, –∑–∞—Å—Ç–µ–Ω—á–∏–≤–∞—è —Å–µ—Å—Ç—Ä–∞",
        user_message="–ü—Ä–∏–≤–µ—Ç!",
        history=[]
    )
    print("‚úÖ MythoMax –ø—Ä–æ–º–ø—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    print(f"–î–ª–∏–Ω–∞ –ø—Ä–æ–º–ø—Ç–∞: {len(mythomax_prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –¢–µ—Å—Ç fallback –ø—Ä–æ–º–ø—Ç–∞
    print("\n3. –¢–µ—Å—Ç fallback –ø—Ä–æ–º–ø—Ç–∞:")
    fallback_prompt = service._build_fallback_prompt("–ü—Ä–∏–≤–µ—Ç!")
    print("‚úÖ Fallback –ø—Ä–æ–º–ø—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    print(f"–î–ª–∏–Ω–∞ –ø—Ä–æ–º–ø—Ç–∞: {len(fallback_prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –°–µ—Ä–≤–∏—Å —É–ø—Ä–æ—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

if __name__ == "__main__":
    test_simplified_service()
