#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ text-generation-webui
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import os
import sys
import subprocess
import time
import socket
from pathlib import Path
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def check_port(port: int, host: str = '127.0.0.1') -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ –ø–æ—Ä—Ç"""
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        result = sock.connect_ex((host, port))
        sock.close()
        return result == 0
    except Exception:
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ text-generation-webui"""
    
    # –¢–µ–ø–µ—Ä—å –ø—É—Ç—å –≤—Å–µ–≥–¥–∞ –∫ text-generation-webui
    webui_dir = Path(__file__).parent.resolve()
    model_dir = "models/main_model"
    model_name = "Llama-3.1-128k-Dark-Planet-Uncensored-8B-Q4_k_s.gguf"
    api_port = 5000
    listen_port = 7861
    
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ text-generation-webui –∏–∑ {webui_dir}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    model_path = webui_dir / model_dir
    if not model_path.exists():
        logger.error(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –º–æ–¥–µ–ª–µ–π {model_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
        
    model_file = model_path / model_name
    if not model_file.exists():
        logger.error(f"‚ùå –ú–æ–¥–µ–ª—å {model_file} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–Ω—è—Ç –ª–∏ –ø–æ—Ä—Ç
    if check_port(api_port):
        logger.warning(f"‚ö†Ô∏è –ü–æ—Ä—Ç {api_port} —É–∂–µ –∑–∞–Ω—è—Ç. –í–æ–∑–º–æ–∂–Ω–æ, text-generation-webui —É–∂–µ –∑–∞–ø—É—â–µ–Ω.")
        return True
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    cmd = [
        sys.executable,  # –¢–µ–∫—É—â–∏–π Python
        "server.py",
        "--api",
        "--api-port", str(api_port),
        "--listen",
        "--listen-port", str(listen_port),
        "--model", model_name,
        "--loader", "llama.cpp",
        "--model-dir", model_dir
    ]
    
    logger.info(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {webui_dir}")
    logger.info(f"ü§ñ –ú–æ–¥–µ–ª—å: {model_name}")
    logger.info(f"üîå API –ø–æ—Ä—Ç: {api_port}")
    logger.info(f"üåê Web –ø–æ—Ä—Ç: {listen_port}")
    logger.info(f"‚ö° –ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        logger.info("üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º text-generation-webui...")
        process = subprocess.Popen(
            cmd,
            cwd=webui_dir
        )
        
        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∏ –≤—ã–≤–æ–¥–∏–º –ª–æ–≥–∏
        logger.info("‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏...")
        for i in range(60):  # 60 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
            if process.poll() is not None:
                logger.error("‚ùå text-generation-webui –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π")
                return False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç
            if check_port(api_port):
                logger.info("‚úÖ text-generation-webui —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
                logger.info(f"üìö API: http://localhost:{api_port}")
                logger.info(f"üåê Web: http://localhost:{listen_port}")
                logger.info("üîÑ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç. –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C.")
                process.wait()
                return True
            
            if i % 5 == 0:
                logger.info(f"‚è≥ –û–∂–∏–¥–∞–µ–º... ({i+1}/60)")
            
            time.sleep(1)
        
        logger.error("‚ùå text-generation-webui –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ 60 —Å–µ–∫—É–Ω–¥")
        process.terminate()
        return False
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = main()
    if not success:
        sys.exit(1) 