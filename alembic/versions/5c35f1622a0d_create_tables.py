"""Create tables

Revision ID: 5c35f1622a0d
Revises: 739527893598
Create Date: 2025-07-27 05:42:16.677036

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5c35f1622a0d'
down_revision: Union[str, Sequence[str], None] = '739527893598'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('characters',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('personality', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('background', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('speaking_style', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('interests', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('mood', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('additional_context', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('age', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('profession', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('behavior', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('appearance', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('voice', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('rules', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('context', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('characters_pkey'))
    )
    op.create_index(op.f('ix_characters_name'), 'characters', ['name'], unique=False)
    op.create_index(op.f('ix_characters_id'), 'characters', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey')),
    sa.UniqueConstraint('email', name=op.f('users_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('username', name=op.f('users_username_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_index(op.f('ix_characters_id'), table_name='characters')
    op.drop_index(op.f('ix_characters_name'), table_name='characters')
    op.drop_table('characters')
    # ### end Alembic commands ###
