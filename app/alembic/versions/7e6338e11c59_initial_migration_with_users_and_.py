"""Initial migration with users and characters

Revision ID: 7e6338e11c59
Revises: 
Create Date: 2025-06-21 14:53:32.509837

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7e6338e11c59'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('characters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('personality', sa.String(), nullable=True),
    sa.Column('background', sa.String(), nullable=True),
    sa.Column('speaking_style', sa.String(), nullable=True),
    sa.Column('interests', sa.JSON(), nullable=True),
    sa.Column('mood', sa.String(), nullable=True),
    sa.Column('additional_context', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_characters_id'), 'characters', ['id'], unique=False)
    op.create_index(op.f('ix_characters_name'), 'characters', ['name'], unique=False)
    op.add_column('users', sa.Column('email', sa.String(), nullable=False))
    op.add_column('users', sa.Column('password', sa.String(), nullable=False))
    op.add_column('users', sa.Column('first_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('is_superuser', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('users', sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.drop_constraint(op.f('users_social_id_key'), 'users', type_='unique')
    op.create_unique_constraint(None, 'users', ['username'])
    op.create_unique_constraint(None, 'users', ['email'])
    op.drop_column('users', 'info')
    op.drop_column('users', 'photo')
    op.drop_column('users', 'taps')
    op.drop_column('users', 'name')
    op.drop_column('users', 'registration_date')
    op.drop_column('users', 'social_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('social_id', sa.BIGINT(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('registration_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('taps', sa.BIGINT(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('photo', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('info', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.create_unique_constraint(op.f('users_social_id_key'), 'users', ['social_id'], postgresql_nulls_not_distinct=False)
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'is_superuser')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_column('users', 'password')
    op.drop_column('users', 'email')
    op.drop_index(op.f('ix_characters_name'), table_name='characters')
    op.drop_index(op.f('ix_characters_id'), table_name='characters')
    op.drop_table('characters')
    # ### end Alembic commands ###
